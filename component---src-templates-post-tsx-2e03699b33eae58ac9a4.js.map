{"version":3,"sources":["webpack:///./src/templates/post.tsx"],"names":["Template","post","data","markdownRemark","className","title","frontmatter","description","excerpt","date","tags","map","tag","i","key","dangerouslySetInnerHTML","__html","html","postQuery"],"mappings":"6FAAA,kGA6BeA,UAxB2B,SAAC,GAAa,IAChDC,EADgD,EAAXC,KACzBC,eAElB,OACE,yBAAKC,UAAU,eACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAK,WAAaJ,EAAKK,YAAYD,MAASE,YAAaN,EAAKK,YAAYE,UAC/E,yBAAKJ,UAAU,QACb,wBAAIA,UAAU,eAAeH,EAAKK,YAAYD,OAE9C,0BAAMD,UAAU,wBAAhB,aAAkDH,EAAKK,YAAYG,MACnE,yBAAKL,UAAU,6BACiB,KAA7BH,EAAKK,YAAYI,KAAK,IAAaT,EAAKK,YAAYI,KAAKC,KAAI,SAACC,EAAaC,GAAd,OAC5D,0BAAMC,IAAKD,EAAGT,UAAU,uBAAxB,KAAiDQ,OAGrD,yBAAKR,UAAU,0BAA0BW,wBAAyB,CAAEC,OAAQf,EAAKgB,YAUpF,IAAMC,EAAY","file":"component---src-templates-post-tsx-2e03699b33eae58ac9a4.js","sourcesContent":["import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport Navbar from \"../layouts/navbar\"\r\nimport SEO from \"../layouts/seo\"\r\n\r\nconst Template: React.FC<{ data: any }> = ({ data }) => {\r\n  const post = data.markdownRemark\r\n\r\n  return (\r\n    <div className=\"application\">\r\n      <Navbar>\r\n        <SEO title={`Blog :: ${post.frontmatter.title}`} description={post.frontmatter.excerpt} />\r\n        <div className=\"post\">\r\n          <h1 className=\"post__title\">{post.frontmatter.title}</h1>\r\n\r\n          <span className=\"post-list__post-date\">Published {post.frontmatter.date}</span>\r\n          <div className=\"post-list__post-tag-group\">\r\n            {post.frontmatter.tags[0] !== '' && post.frontmatter.tags.map((tag: string, i: number) => (\r\n              <span key={i} className=\"post-list__post-tag\"> #{tag}</span>\r\n            ))}\r\n          </div>\r\n          <div className=\"post-list__post-content\" dangerouslySetInnerHTML={{ __html: post.html }} />\r\n        </div>\r\n      </Navbar>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default Template\r\n\r\nexport const postQuery = graphql`\r\n  query BlogPostByPath($path: String!) {\r\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\r\n      html\r\n      frontmatter { \r\n        path\r\n        title\r\n        date\r\n        tags\r\n        excerpt\r\n      }\r\n    }\r\n  }\r\n`"],"sourceRoot":""}